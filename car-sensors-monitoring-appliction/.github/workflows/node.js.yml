name: Node.js CI Pipeline

on:
  push:
    branches: [ "main" ]
    tags:
      - '*' # Trigger for both branches and tags
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm install || true

    - name: Run Tests with Coverage
      env:
        MONGODB_URI: mongodb://localhost:27017/test
      run: |
        npm test || true

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: coverage/lcov-report/

    - name: Run Gitleaks
      run: |
        curl -sSL -o gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz
        tar -xzf gitleaks.tar.gz
        sudo mv gitleaks /usr/local/bin/
        gitleaks detect --source . --report-format sarif --report-path gitleaks-${{ matrix.node-version }}.sarif

    - name: Upload Gitleaks Report
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report-${{ matrix.node-version }}
        path: gitleaks-${{ matrix.node-version }}.sarif

    - name: Check Vulnerabilities
      run: |
        npm audit --audit-level=moderate || true

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v4.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.organization=makaremhind
          -Dsonar.projectKey=MakaremHind_car-sensors-monitoring-application
          -Dsonar.sources=.
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

    - name: Run ESLint for Code Style
      run: |
        npx eslint controllers/**/*.js routes/**/*.js config/**/*.js models/**/*.js ./*.js || true

    - name: Run Prettier for Code Formatting
      run: |
        npx prettier --check "controllers/**/*.js" "routes/**/*.js" "config/**/*.js" "models/**/*.js" "./*.js" || true

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Changelog
      id: changelog
      run: |
        git fetch --tags
        PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1)^ 2>/dev/null || echo "none")
        if [ "$PREV_TAG" = "none" ]; then
          git log --pretty=format:"- %s" > CHANGELOG.md
        else
          git log $PREV_TAG..HEAD --pretty=format:"- %s" > CHANGELOG.md
        fi
        cat CHANGELOG.md

    - name: Download Coverage Reports
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Organize Reports and Packages
      run: |
        mkdir -p release-artifacts/gitleaks
        mkdir -p release-artifacts/coverage
        mkdir -p release-artifacts/packages
        mv release-artifacts/gitleaks-report-*.sarif release-artifacts/gitleaks/ || true
        mv release-artifacts/coverage-report-* release-artifacts/coverage/ || true

    - name: Package Build Artifacts with pkg
      run: |
        npm install -g pkg
        pkg . --output release-artifacts/packages/car-sensors-monitoring-app --targets node16-linux-x64,node16-macos-x64,node16-win-x64

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body_file: CHANGELOG.md
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "release-artifacts/**/*"
        generateReleaseNotes: true
        allowUpdates: true
